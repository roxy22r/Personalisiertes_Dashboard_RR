@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.example.personalisiertes_dashboard_rr.Appointment",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1322970774 { 
   	label=example
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_2052882032 { 
   	label=personalisiertes_dashboard_rr
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Appointment1266025533[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Appointment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   begin: LocalTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   date: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   end: LocalTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   note: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   titel: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CalenderController1266025533[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CalenderController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   appointments: List&lt;Appointment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   appointmentsOftTheDay: Pane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   calenderGrid: GridPane [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   monthLabel: Label [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   monthNames: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   mothSlideCount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   owner: Owner [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   peopleDirectory: ComboBox [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   person: Person [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectOwner: ProjectOwner [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectOwners: List&lt;ProjectOwner&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   root: Parent [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scene: Scene [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   showBothCalender: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   stage: Stage [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- IsAnyAppointmentInputEmpty(textTitel: TextField, datePicker: DatePicker, textBeginn: TextField, textEnd: TextField, textArea: TextArea): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAppointment()</TD></TR>
<TR><TD ALIGN="LEFT" >- editAppointment(event: ActionEvent, dialog: Alert, ok: ButtonType, textTitel: TextField, datePicker: DatePicker, textBeginn: TextField, textEnd: TextField, textArea: TextArea)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initialize(location: URL, resources: ResourceBundle)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadAppointmentOftheDay(date: LocalDateTime, appointmentOftheDay: Appointment)</TD></TR>
<TR><TD ALIGN="LEFT" >- loadAppointments(calenderGrid: GridPane, colum: int, row: int, cell: Bounds, month: Month, day: int)</TD></TR>
<TR><TD ALIGN="LEFT" >- nextMonth()</TD></TR>
<TR><TD ALIGN="LEFT" >+ onClickGetAJokeView(event: ActionEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onClickGetStockView(event: ActionEvent)</TD></TR>
<TR><TD ALIGN="LEFT" >- previousMonth()</TD></TR>
<TR><TD ALIGN="LEFT" >+ reloadCalenderSlide()</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeButton(button: Button)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeButtonByRowColumnIndex(row: int, column: int, gridPane: GridPane)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeLabelByRowColumnIndex(row: int, column: int, gridPane: GridPane)</TD></TR>
<TR><TD ALIGN="LEFT" >- showAppointmentInfo(event: ActionEvent, appointment: Appointment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showImpressum()</TD></TR>
<TR><TD ALIGN="LEFT" >- showVisableAppointmentsOfPerson()</TD></TR>
<TR><TD ALIGN="LEFT" >- validateUserInput(dialog: Alert, create: ButtonType, textTitel: TextField, datePicker: DatePicker, textBeginn: TextField, textEnd: TextField, noteLable: Label, textArea: TextArea)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Owner1266025533[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Owner</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Person1266025533[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Person</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   appointments: List&lt;Appointment&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   firstName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   perosnkind: personAppointmentCalenderKind [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   secondName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAllAppointments(appointments: List&lt;Appointment&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAppointment(appointment: Appointment)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectOwner1266025533[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectOwner</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAvaialbeTime(begin: LocalDateTime, end: LocalDateTime)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
CalenderController1266025533 -> Appointment1266025533[label="appointments
[0..*]"];
CalenderController1266025533 -> Owner1266025533[label="owner
[0..1]"];
CalenderController1266025533 -> Person1266025533[label="person
[0..1]"];
CalenderController1266025533 -> ProjectOwner1266025533[label="projectOwner
[0..1]"];
CalenderController1266025533 -> ProjectOwner1266025533[label="projectOwners
[0..*]"];
Person1266025533 -> Appointment1266025533[label="appointments
[0..*]"];
Person1266025533 -> Owner1266025533[arrowhead=none, arrowtail=empty, dir=both];
Person1266025533 -> ProjectOwner1266025533[arrowhead=none, arrowtail=empty, dir=both];
    
}
@enduml